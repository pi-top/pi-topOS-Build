# - import_playbook: create_pi_top_os_image.yml

- hosts: localhost
  become_method: sudo
  gather_facts: false

  vars:
    image_folder: ./
    pt_os_mount_point: /tmp/pi-top-os

  tasks:

    - name: Don't continue if already mounted...
      stat:
        path: "{{ pt_os_mount_point }}/dev/pts"
      register: pt_os_file_details

    - meta: end_host
      when: pt_os_file_details.stat.exists


    - set_fact:
        # TODO: handle this globally
        image_name: new-image

    - set_fact:
        image_path: "{{ image_folder }}/{{ image_name }}.img"

    - name: List the loop devices associated with image
      command: "losetup --output=NAME --associated {{image_path}}"
      register: loop_device_check

    - name: Mount all the partitions to loop devices
      command: "partx --add --verbose {{image_path}}"
      become: true
      when: loop_device_check.stdout_lines[1] is not defined

    - name: blkid ptos recovery
      shell: "blkid -l -o export -t LABEL='recovery'"
      register: blkid_pt_os_recovery_stdout

    - debug:
        var: blkid_pt_os_recovery_stdout
        verbosity: 2

    - name: blkid ptos boot
      shell: "blkid -l -o export -t LABEL='boot'"
      register: blkid_pt_os_boot_stdout

    - debug:
        var: blkid_pt_os_boot_stdout
        verbosity: 2

    - name: blkid ptos rootfs
      shell: "blkid -l -o export -t LABEL='rootfs'"
      register: blkid_pt_os_rootfs_stdout

    - debug:
        var: blkid_pt_os_rootfs_stdout
        verbosity: 2

    - set_fact:
        recovery:
          fstype: "{{ blkid_pt_os_recovery_stdout.stdout_lines[-2].replace('TYPE=', '') }}"
          partuuid: "{{ blkid_pt_os_recovery_stdout.stdout_lines[-1].replace('PARTUUID=', '') }}"
        boot:
          fstype: "{{ blkid_pt_os_boot_stdout.stdout_lines[-2].replace('TYPE=', '') }}"
          partuuid: "{{ blkid_pt_os_boot_stdout.stdout_lines[-1].replace('PARTUUID=', '') }}"
        rootfs:
          fstype: "{{ blkid_pt_os_rootfs_stdout.stdout_lines[-2].replace('TYPE=', '') }}"
          partuuid: "{{ blkid_pt_os_rootfs_stdout.stdout_lines[-1].replace('PARTUUID=', '') }}"

    - debug:
        var: recovery
        verbosity: 2

    - debug:
        var: boot
        verbosity: 2

    - debug:
        var: rootfs
        verbosity: 2

    - name: Create mount point
      file:
        path: "{{pt_os_mount_point}}"
        state: directory
        recurse: true

    - name: Mount rootfs
      become: true
      mount:
        path: "{{ pt_os_mount_point }}"
        src: "PARTUUID={{ rootfs.partuuid }}"
        fstype: "{{ rootfs.fstype }}"
        fstab: /tmp/pi-top-fstab
        opts: defaults,noatime
        state: mounted

    - name: Mount boot
      become: true
      mount:
        path: "{{ pt_os_mount_point }}/boot"
        src: "PARTUUID={{ boot.partuuid }}"
        fstype: "{{ boot.fstype }}"
        fstab: /tmp/pi-top-fstab
        opts: defaults
        state: mounted

    - name: Mount recovery
      become: true
      mount:
        path: "{{ pt_os_mount_point }}/recovery"
        src: "PARTUUID={{ recovery.partuuid }}"
        fstype: "{{ recovery.fstype }}"
        fstab: /tmp/pi-top-fstab
        opts: defaults
        state: mounted

    # Mount Virtual Filesystems
    - name: Mount proc
      become: true
      command: mount -t proc /proc "{{ pt_os_mount_point }}/proc"

    - name: Mount sys
      become: true
      command: mount -t sysfs /sys "{{ pt_os_mount_point }}/sys"

    - name: Mount dev
      become: true
      command: mount -o bind /dev "{{ pt_os_mount_point }}/dev"

    - name: Mount dev/pts
      become: true
      command: mount -o bind /dev/pts "{{ pt_os_mount_point }}/dev/pts"
