- import_playbook: mount_pi_top_os.yml

- hosts: pi_top_os:192.168.*:!localhost
  gather_facts: true
  environment:
    # For some reason ansible only picks up the sbin's by default, which causes apt-key to fail
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/jvm/java-11-openjdk-armhf/bin"
  vars:
    build_id_schema_version: 1
    build_repo_name: pi-top-os-unstable
    build_repo_commit: unknown
    build_repo_commit_short: unknown
    build_number: 0
    build_action_url: unknown

    swapfile_size_mb: 512

    # Created with :
    # python2 -c 'import crypt; print crypt.crypt("pi-top", "$1$SomeSalt$")'
    password: $1$SomeSalt$c4XjD2pO7T6KeaTJXLMFZ/

  tasks:
############
# Password #
############
    - name: Set pi user password
      user:
        name: pi
        password: "{{ password }}"

##############
# Build Info #
##############
    - name: Copy issue file template
      copy:
        src: files/pt-issue.txt
        dest: /boot/pt-issue.txt

    #######################################################
    # See 'docs/BUILD_ID_SCHEMA.txt' for more information #
    #######################################################

    - name: Extract pi-topOS version from pt-os version file for build ID
      slurp:
        src: /etc/pi-top_os_version
      register: orig_pt_os_ver

    - name: Generate build ID
      set_fact:
        build_id: "S{{ build_id_schema_version }}_B{{ build_repo_name | replace('pi-top-os-','') }}_D{{ ansible_date_time.date }}_P{{ orig_pt_os_ver['content'] | b64decode | trim }}_#{{ build_repo_commit_short }}_R{{ build_number }}"

    - name: Replace build info placeholders in /boot/pt-issue.txt
      replace:
        path: /boot/pt-issue.txt
        regexp: "{{ item.placeholder }}"
        replace: "{{ item.replace }}"
      with_items:
      - { placeholder: 'BUILD_ID_TAG', replace: '{{ build_id }}'}
      - { placeholder: 'BUILD_REPO_URL', replace: 'https://github.com/pi-top/pi-topOS-ansible-playbook'}
      - { placeholder: 'BUILD_REPO_COMMIT', replace: '{{ build_repo_commit }}'}
      - { placeholder: 'BUILD_ACTION_URL', replace: '{{ build_action_url }}'}

##############
# config.txt #
##############
    - name: Copy boot config.txt
      copy:
        src: files/config.txt
        dest: /boot/config.txt
        mode: '0755'

    - name: Copy boot config.txt backup
      copy:
        src: files/config.txt
        dest: /boot/config.txt.orig
        mode: '0755'

########
# MOTD #
########
    - name: Remove 10-uname
      file:
        dest: /etc/update-motd.d/10-uname
        state: absent

    - name: Copy motd
      copy:
        src: files/10-pt-motd
        dest: /etc/update-motd.d/10-pt-motd
        mode: '0755'

##################
# System Patches #
##################
    # TODO: find better way to determine this
    - name: Check if desktop needs patching
      stat:
        path: /etc/X11/xinit/xinitrc
      register: stat_result

    - name: Apply desktop patches
      patch:
        src: "patches/{{ item }}.diff"
        basedir: /
        strip: 1
      loop:
        - openbox-xdg-autostart-shebang
        - disable-openbox-session-right-click-menu
        - dpms-timeout-5mins
      when: stat_result.stat.exists

    - name: Apply system patches
      patch:
        src: "patches/{{ item }}.diff"
        basedir: /
        strip: 1
      loop:
        - add-post-boot-blinking-cursor
        - volume-max
        - empty-etc-issue
        - empty-etc-motd
        - hostname
        - hosts
        - source-etc-profile-in-etc-zsh-zprofile
        - static-ip-on-usb-interface
        - us-keyboard
        - us-locale

    - name: Create swapfile
      shell: |
        sed -i "s|CONF_SWAPSIZE=100|CONF_SWAPSIZE={{ swapfile_size_mb }}|" /etc/dphys-swapfile
        dd if=/dev/zero of=/var/swap bs=1024 count=$((1024 * {{ swapfile_size_mb }}))

###########################################
# Onboarding setup: systemd/dbus services #
###########################################
    # TODO: find better way to determine this
    - name: Check if notifications service exists
      stat:
        path: /usr/share/dbus-1/services/org.xfce.xfce4-notifyd.Notifications.service
      register: notif_srv_stat_result

    - name: Disable notifications until onboarding is completed (if necessary)
      shell: |
        mkdir -p /usr/lib/pt-os-web-portal/bak/usr/share/dbus-1/services/
        mv /usr/share/dbus-1/services/org.xfce.xfce4-notifyd.Notifications.service /usr/lib/pt-os-web-portal/bak/usr/share/dbus-1/services/
      args:
        creates: "/usr/lib/pt-os-web-portal/bak/usr/share/dbus-1/services/org.xfce.xfce4-notifyd.Notifications.service"
      when: notif_srv_stat_result.stat.exists

    - name: Enable Onboarding (using symlink)
      shell: ln -sf /usr/lib/python3/dist-packages/pt_os_web_portal/resources/pt-os-setup.desktop /etc/xdg/autostart/pt-os-setup.desktop

    # Boot to openbox-session by setting priority 99 (higher than LXDE default)
    - name: Set openbox-session as session manager
      shell: update-alternatives --install /usr/bin/x-session-manager x-session-manager /usr/bin/openbox-session 99
      when: stat_result.stat.exists

    - name: Disable firmware updater for onboarding (using symlink)
      file:
        dest: /etc/systemd/system/graphical.target.wants/pt-firmware-updater.service
        state: absent

    - name: Disable Further Link for onboarding (using symlink)
      file:
        dest: /etc/systemd/system/multi-user.target.wants/further-link.service
        state: absent

    - name: Disable OLED menu until onboarding finishes (using symlink)
      file:
        dest: /etc/systemd/system/multi-user.target.wants/pt-miniscreen.service
        state: absent

###################################
# Onboarding setup: system config #
###################################
    - name: Print hostname
      shell: hostname

    - name: Enable Wi-Fi AP-STA mode (Wi-Fi Access Point)
      shell: wifi-ap-sta enable

    - name: Set up virtual Ethernet driver for pi-top [4] display port
      replace:
        path: /boot/cmdline.txt
        regexp: "{{ item.original }}"
        replace: "{{ item.replace }}"
      with_items:
      - { original: ' modules-load=dwc2,g_ether', replace: ''}
      - { original: 'rootwait', replace: 'rootwait modules-load=dwc2,g_ether'}

    - name: Clean boot configuration - Disable Raspberry Pi logo on boot screen
      shell: |
        echo "$(cat /boot/cmdline.txt) logo.nologo" > /boot/cmdline.txt

    - name: Clean boot configuration - Remove blinking cursor
      shell: |
        echo "$(cat /boot/cmdline.txt) vt.global_cursor_default=0" > /boot/cmdline.txt

    - name: Clean boot configuration - Disable boot kernel warnings/errors
      # Usually harmless, always scary
      #
      # e.g.:
      # [    3.220901 ] usb 1-1.4.2: device descriptor read/64, error -32
      # [    3.195188 ] usb 1-1.4.2: device descriptor read/64, error -32
      # [    3.751421 ] usb 1-1.4.2: device descriptor read/64, error -32
      # [    3.992474 ] usb 1-1.4.2: device not accepting address 8, error -71
      # [    5.713155 ] usb 1-1.4-port2: unable to enumerate USB device
      shell: |
        echo "$(cat /boot/cmdline.txt) loglevel=0" > /boot/cmdline.txt

#########################
# General system config #
#########################
    - name: Setup pt-os-first-boot-setup to run on first boot
      shell: /usr/sbin/pt-os-first-boot-setup prepare

    - name: Generate default locales
      locale_gen:
        name: "{{ item }}"
      loop:
        - en_GB.UTF-8
        - en_US.UTF-8

    - name: Set default locale to US
      shell: update-locale LANG=en_US.UTF-8

    # More information on this file:
    # https://wiki.debian.org/systemd#Missing_startup_messages_on_console.28tty1.29_after_the_boot
    - name: Clear Plymouth splashscreen if booting to console
      file:
        dest: /etc/systemd/system/getty@tty1.service.d/noclear.conf
        state: absent

    - name: Set plymouth theme to 'pt-os-bootsplash'
      shell: plymouth-set-default-theme -R pt-os-bootsplash

    # openbox configuration is modified to prevent key-presses in openbox-session during onboarding
    - name: Configure openbox environment
      shell: |
        mkdir -p /home/pi/.config/openbox
        cp /etc/xdg/openbox/rc.xml /home/pi/.config/openbox/rc.xml
        keyboard_binding="<keybind key='A-Tab'> <action name='NextWindow'> <dialog>no</dialog> <bar>no</bar> </action> </keybind>"
        sed -i ':a;N;$!ba; s@<keyboard>.*<\/keyboard>@<keyboard>'"${keyboard_binding}"'<\/keyboard>@g' /home/pi/.config/openbox/rc.xml
      when: stat_result.stat.exists

############
# Clean up #
############
    - name: Remove leftover raspi-ui-overrides directory
      file:
        dest: /usr/share/raspi-ui-overrides
        state: absent

    - name: Clean up fonts, saving ~600mb
      apt:
        name: "{{ packages }}"
        state: absent
        purge: true
        autoclean: true
        autoremove: true
      vars:
        packages:
          - fonts-noto-cjk
          - fonts-noto-cjk-extra
          - fonts-noto-color-emoji
          - fonts-noto-extra
          - fonts-noto-mono
          - fonts-noto-ui-core
          - fonts-noto-ui-extra
          - fonts-noto-unhinted

    - name: Clean up Raspberry Pi OS stuff
      apt:
        name: "{{ packages }}"
        state: absent
        purge: true
        autoclean: true
        autoremove: true
      vars:
        packages:
          # Java (large size, not used)
          # ~400MB w/ dependent packages
          - default-jre
          - default-jre-headless
          - openjdk-11-jre
          - openjdk-11-jre-headless
          # Unused applications
          - dillo  # No need for other browsers
          - qpdfview  # PDFs handled by Chromium
          - galculator  # replaced by 'gnome-calculator', a multi-touch friendly calculator
          # IDE - default to VS Code
          - geany
          - geany-common
          - thonny
          # RPi OS
          # Handled by packages:
          # - piwiz
          # - raspberrypi-ui-mods
          - libpam-chksshpwd  # SSH desktop password check - stock check for "raspberry"
          # - pprompt  # show prompt if PAM leaves breadcrumb

    # TODO: move file management to post-config step (finalise)
    #     use mount, not chroot
    #     clean up logs, etc. _after_ using it
    # incl. remove build journal logs
    # i.e. ALL operations that are machine-agnostic should be pre- and post-config steps
    # to minimise time in chroot
    - name: Clean up unwanted build process artifacts
      file:
        path: "{{ item }}"
        state: absent
      loop:
        # temporary file from GPG:
        - /etc/apt/trusted.gpg~
        # temporary password management files:
        - /etc/passwd-
        - /etc/group-
        - /etc/shadow-
        - /etc/gshadow-
        # machine-specific IDs and keys:
        - /etc/machine-id
        - /etc/vnc/updateid
        - /root/.vnc/private.key
        # chroot artifact
        - /root/.ansible
        # fixed in next step:
        - /var/cache/apt/archives
        # remove all logs
        - /var/log/journal

    # systemd will fail if system does not contain a
    # (possibly empty) /etc/machine-id file
    - name: Empty machine ID
      file:
        path: /etc/machine-id
        state: touch

    - name: Set sysd logs to persist
      file:
        path: /var/log/journal
        state: directory
        recurse: true

    - name: Fix apt cache
      # 'apt clean' does not work with ansible
      # so, we remove "/var/cache/apt/archives" (in previous step)
      # and then we re-add "/var/cache/apt/archives/partial"
      # which has the same effect
      #
      # reference: https://www.cyberciti.biz/faq/can-i-delete-var-cache-apt-archives-for-ubuntu-debian-linux/
      file:
        dest: /var/cache/apt/archives/partial
        state: directory

    - name: Consolidate duplicate files in /usr/share/doc
      shell: 'hardlink -t /usr/share/doc'

############
# Finalise #
############
    # Finalise image as pi-gen does in 'export-image/04-finalise/01-run.sh'
    - name: Update system time
      shell: "date -u '+%Y-%m-%d %H:%M:%S' > /etc/fake-hwclock.data"
      # shell: '/sbin/fake-hwclock save force'


    # Fix permissions since ansible runs chroot as root, so we have to clean up
    - name: Fix ownership and permissions of /home/pi
      file:
        path: /home/pi/
        state: directory
        recurse: yes
        owner: pi
        group: pi
        mode: '0755'
