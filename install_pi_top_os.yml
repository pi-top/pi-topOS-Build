- import_playbook: mount_pi_top_os.yml

- hosts: pi_top_os:192.168.*:!localhost
  gather_facts: true
  environment:
    # For some reason ansible only picks up the sbin's by default, which causes apt-key to fail
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/jvm/java-11-openjdk-armhf/bin"
  vars:
    repo_name: pi-top-os
    distro_name: sirius
    build_commit: unknown
    build_number: 0

  tasks:
    - name: Upgrade Raspberry Pi OS
      apt:
        state: latest
        update_cache: true
        install_recommends: true
      register: apt_status
      retries: 5
      until: apt_status is success

    - name: Add pi-top Apt key
      apt_key:
        data: "{{ lookup('file', 'pt-apt.asc') }}"
        state: present

    - name: Add pi-top repository basic authentication
      copy:
        src: files/pi-top.conf
        dest: /etc/apt/auth.conf.d/pi-top.conf
      when: repo_name == "pi-top-os-internal"

    - name: Add pi-top build repository
      apt_repository:
        repo: "deb http://apt.pi-top.com/{{ repo_name }}/ {{ distro_name }} main contrib non-free"
        filename: "pi-top"
        update_cache: true

    - name: Install pt-os
      apt:
        name: pt-os
        update_cache: true
        state: latest
        install_recommends: true
        default_release: "{{ distro_name }}"

      register: apt_status
      retries: 5
      until: apt_status is success

# TODO: handle installing recovery from GitHub zip
#     move to separate playbook/script? create-empty-pi-top-image.sh?
#     seems better to handle at the point where the partition is being created!
    - uri:
        url: https://api.github.com/repos/pi-top/pi-topOS-Recovery/releases/latest
        return_content: true
      register: json_response

    - get_url:
      url: "{{ json_response.json.assets[0].browser_download_url }}"
      dest: ./recovery.zip

    - name: Unzip recovery into partition 1
      unarchive:
        src: "{{ image_folder }}{{ image_name }}.zip"
        dest: "{{ image_folder }}"
        creates: "{{ image_path }}"

    - name: Update all packages to the latest version
      apt:
        upgrade: dist
        update_cache: true
      register: apt_status
      retries: 5
      until: apt_status is success

# TODO: run `pt-os-config --all`

    - name: Replace placeholders in pt-issue
      replace:
        path: /etc/pt-issue
        regexp: "{{ item.placeholder }}"
        replace: "{{ item.replace }}"
      with_items:
      - { placeholder: 'IMG_NAME', replace: 'Sirius'}
      - { placeholder: 'BUILD_NUMBER', replace: '{{ build_number }}'}
      - { placeholder: 'IMG_DATE', replace: '{{ ansible_date_time.date }}'}
      - { placeholder: 'SOURCES_REPO', replace: '{{ distro_name }}'}
      - { placeholder: 'SYSTEM_COMMIT', replace: '{{ build_commit }}'}

    - name: Remove leftover raspi-ui-overrides directory
      file:
        dest: /usr/share/raspi-ui-overrides
        state: absent

    - name: Clean up fonts, saving ~600mb
      apt:
        name: "{{ packages }}"
        state: absent
        purge: true
        autoclean: true
        autoremove: true
      vars:
        packages:
          - fonts-noto-cjk
          - fonts-noto-cjk-extra
          - fonts-noto-color-emoji
          - fonts-noto-extra
          - fonts-noto-mono
          - fonts-noto-ui-core
          - fonts-noto-ui-extra
          - fonts-noto-unhinted

    - name: Clean up Raspberry Pi OS stuff
      apt:
        name: "{{ packages }}"
        state: absent
        purge: true
        autoclean: true
        autoremove: true
      vars:
        packages:
          - bluej
          - claws-mail
          - code-the-classics
          - default-jre
          - default-jre-headless
          - dillo
          - epiphany-browser
          - epiphany-browser-data
          - galculator
          - geany
          - geany-common
          - greenfoot-unbundled
          - nodered
          - openjdk-11-jre
          - openjdk-11-jre-headless  # ~400MB w/ dependent packages
          - piwiz
          - pprompt
          - python-games
          - python3-thonny
          - python3-thonny-pi
          - qpdfview
          - raspberrypi-ui-mods
          - scratch
          - scratch2
          - thonny
          - wolfram-engine

    - name: Fix ownership and permissions of /home/pi
      file:
        path: /home/pi/
        state: directory
        recurse: yes
        owner: pi
        group: pi
        mode: '0755'

    - name: Update system time
      shell: "date -u '+%Y-%m-%d %H:%M:%S' > /etc/fake-hwclock.data"
      # shell: '/sbin/fake-hwclock save force'

    - name: Cleanup files and folders
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/default/rpi-eeprom-update.*
        - /var/lib/apt/lists/*
        - /home/pi/MagPi
        - /var/log/*
        - /tmp/*
        - /etc/apt/apt.conf.d/51cache
        - /etc/network/interfaces.dpkg-old
        - /etc/apt/sources.list~
        - /etc/apt/trusted.gpg~
        - /etc/passwd-
        - /etc/group-
        - /etc/shadow-
        - /etc/gshadow-
        - /etc/subuid-
        - /etc/subgid-
        - /var/cache/debconf/*-old
        - /var/lib/dpkg/*-old
        - /usr/share/icons/*/icon-theme.cache
        - /var/lib/dbus/machine-id
        - /root/.vnc/private.key
        - /etc/vnc/updateid
        - /var/cache/apt/archives  # Fixed in next step
        - /root/.ansible
        - /..deb

    - name: Fix apt cache
    # 'apt clean' does not work with ansible
    # so, we remove "/var/cache/apt/archives" (in previous step)
    # and then we re-add "/var/cache/apt/archives/partial"
    # which has the same effect
    #
    # reference: https://www.cyberciti.biz/faq/can-i-delete-var-cache-apt-archives-for-ubuntu-debian-linux/
      file:
        dest: /var/cache/apt/archives/partial
        state: directory

    - name: Consolidate duplicate files in /usr/share/doc
      shell: 'hardlink -t /usr/share/doc'
