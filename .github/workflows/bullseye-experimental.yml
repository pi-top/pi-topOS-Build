name: pi-topOS Experimental Bullseye Build

on:
  push:
    branches:
      - "**"
    paths:
      - "playbooks"
      - "inventory"
      - "ansible.cfg"
      - ".github/workflows/bullseye-experimental.yml"
  workflow_dispatch:
  schedule:
    # Run daily at midnight
    - cron:  '0 0 * * *'

env:
  DISTRO_NAME: "bullseye"
  REPO_NAME: "experimental"
  RASPIOS_BUILD_DATE: "2021-10-30"
  RASPIOS_RELEASE_DATE: "2021-11-08"

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # 32-bit Lite
          - build_type_name: "armhf-lite"

          # 32-bit Regular
          - build_type_name: "armhf"

          # 32-bit Full
          - build_type_name: "armhf-full"

          # 64-bit Lite
          - build_type_name: "arm64-lite"

          # 64-bit Regular
          - build_type_name: "arm64"

    steps:
      - name: GitHub Environment Variables Action
        uses: FranzDiebold/github-env-vars-action@v1.2.1

      - name: Checkout code
        uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      - name: Install ansible and playbook dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y ansible qemu-user-static unzip zerofree

      - name: Build
        run: |
          set -x

          export ANSIBLE_FORCE_COLOR=true
          export TERM=xterm-color
          # chroot connection requires running as root
          # 'ansible-playbook' is not in root user's PATH
          ANSIBLE="sudo $(which ansible-playbook) -i inventory -vv"

          image_name="${{ env.RASPIOS_BUILD_DATE }}-raspios-${{ env.DISTRO_NAME }}-${{ matrix.build_type_name }}"

          # e.g. 'arm64-lite' = 'raspios_arm64_lite'
          build_type_dir="raspios_$(echo ${underlined} | python3 -c "import sys; print('_'.join(reversed(sys.stdin.read().strip().split('-'))))")"
          python -c "import sys; print '\n'.join(reversed(sys.stdin.read().split('\n')))"

          url="https://downloads.raspberrypi.org/${build_type_dir}/images/${build_type_dir}-${{env.RASPIOS_RELEASE_DATE}}/${image_name}.zip"

          echo "==> Running get_raspios playbook..."
          ${ANSIBLE} --extra-vars raspi_os_url=${url} \
                     --extra-vars image_name=${image_name} \
                     playbooks/get_raspios.yml

          echo "==> Running mount_raspios playbook..."
          ${ANSIBLE} --extra-vars image_name=${image_name} \
                     playbooks/mount_raspios.yml

          echo "==> Running create_pi_top_os_image playbook..."
          ${ANSIBLE} playbooks/create_pi_top_os_image.yml

          echo "==> Running mount_pi_top_os playbook..."
          ${ANSIBLE} playbooks/mount_pi_top_os.yml

          echo "==> Running install_pi_top_os playbook..."
          ${ANSIBLE} --extra-vars repo_name=${{ env.REPO_NAME }} \
                     --extra-vars distro_name=${{ env.DISTRO_NAME }} \
                     playbooks/install_pi_top_os.yml

          echo "==> Running configure_pi_top_os playbook..."
          ${ANSIBLE} --extra-vars distro_name=${{ env.DISTRO_NAME }} \
                     --extra-vars build_number=${{ github.run_number || github.run_id }} \
                     --extra-vars build_repo_commit="$(git rev-parse HEAD)" \
                     --extra-vars build_repo_commit_short="$(git rev-parse --short HEAD)" \
                     --extra-vars build_action_url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
                     --extra-vars build_repo_name="${{ env.REPO_NAME }}" \
                     playbooks/configure_pi_top_os.yml

          echo "==> Running finalise_pi_top_image playbook..."
          ${ANSIBLE} playbooks/finalise_pi_top_image.yml

          # echo "==> Running analyse_build playbook..."
          # ${ANSIBLE} playbooks/analyse_build.yml

      - name: Get zip filename
        run: echo "ZIP_FILENAME=$(find playbooks/artifacts -name "*.zip" | head -n1)" >> $GITHUB_ENV

      - name: Get artifact name
        run: echo "ARTIFACT_NAME=${{ env.REPO_NAME }}-${{ env.DISTRO_NAME }}-${{ github.run_number || github.run_id }}" >> $GITHUB_ENV

      - name: Upload OS zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          if-no-files-found: error
          path: ${{ env.ZIP_FILENAME }}

      - name: Upload metadata artifact
        uses: actions/upload-artifact@v2
        with:
          name: metadata
          if-no-files-found: error
          path: |
            playbooks/artifacts/*
            !${{ env.ZIP_FILENAME }}

      - name: Upload OS zip to GCS
        uses: google-github-actions/upload-cloud-storage@v0.4.0
        with:
          credentials: ${{ secrets.GOOGLE_CLOUD_UPLOAD_JSON_CREDENTIALS }}
          path: ${{ env.ZIP_FILENAME }}
          destination: ${{ secrets.GOOGLE_CLOUD_OS_UPLOAD_BUCKET }}/pi-topOS-${{ env.DISTRO_NAME }}/
