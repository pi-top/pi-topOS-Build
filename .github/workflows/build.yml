name: pi-topOS Build

on:
  push:
    branches:
      - "**"
  workflow_dispatch:
    # Not required as defaults are handled later on (to support push events)
    inputs:
      REPO_NAME:
        description: 'REPO_NAME'
        required: false
        default: "experimental"
      DISTRO_NAME:
        description: 'DISTRO_NAME'
        required: false
        default: "sirius"
  schedule:
    # Run daily at midnight
    - cron:  '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: GitHub Environment Variables Action
        uses: FranzDiebold/github-env-vars-action@v1.2.1

      - name: Checkout code
        uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      - name: Install ansible and playbook dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y ansible qemu-user-static unzip zerofree

      - name: Build
        run: |
          export ANSIBLE_FORCE_COLOR=true
          export TERM=xterm-color
          # chroot connection requires running as root
          # 'ansible-playbook' is not in root user's PATH
          ANSIBLE="sudo $(which ansible-playbook) -i inventory -vvv"

          echo "==> Running get_raspios playbook..."
          ${ANSIBLE} playbooks/get_raspios.yml

          echo "==> Running mount_raspios playbook..."
          ${ANSIBLE} playbooks/mount_raspios.yml

          echo "==> Running create_pi_top_os_image playbook..."
          ${ANSIBLE} playbooks/create_pi_top_os_image.yml

          echo "==> Running mount_pi_top_os playbook..."
          ${ANSIBLE} playbooks/mount_pi_top_os.yml

          echo "==> Running install_pi_top_os playbook..."
          ${ANSIBLE} --extra-vars repo_name=${{ github.event.inputs.BUILD_REPO_NAME || 'experimental' }} \
                     --extra-vars distro_name=${{ github.event.inputs.DISTRO_NAME || 'sirius' }} \
                     playbooks/install_pi_top_os.yml

          echo "==> Running configure_pi_top_os playbook..."
          ${ANSIBLE} --extra-vars distro_name=${{ github.event.inputs.BUILD_REPO_NAME || 'sirius' }} \
                     --extra-vars build_number=${GITHUB_RUN_NUMBER} \
                     --extra-vars build_commit=$(git rev-parse HEAD)\
                     playbooks/configure_pi_top_os.yml

          echo "==> Running finalise_pi_top_image playbook..."
          ${ANSIBLE} playbooks/finalise_pi_top_image.yml

          # echo "==> Running analyse_build playbook..."
          # ${ANSIBLE} playbooks/analyse_build.yml

      - name: Get zip filename
        run: echo "ZIP_FILENAME=$(find playbooks/artifacts -name "*.zip" | head -n1)" >> $GITHUB_ENV

      - name: Get push artifact name
        if: github.event_name == 'push'
        run: echo "ARTIFACT_NAME=pt-os-${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

      # 'pt-os' artifact name is used by publish.yml
      - name: Get manual trigger artifact name
        if: github.event_name == 'workflow_dispatch'
        run: echo "ARTIFACT_NAME=pt-os" >> $GITHUB_ENV

      - name: Upload OS zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          if-no-files-found: error
          path: ${{ env.ZIP_FILENAME }}

      - name: Upload metadata
        uses: actions/upload-artifact@v2
        with:
          name: metadata
          if-no-files-found: error
          path: |
            playbooks/artifacts/*
            !${{ env.ZIP_FILENAME }}
